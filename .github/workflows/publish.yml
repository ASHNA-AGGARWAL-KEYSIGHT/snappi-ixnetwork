# Build workflow does the following:
#   - checkout all files
#   - get the latest version number
#   - setup python 3.x env
#   - install python dependencies
#   - build python distributions
#   - create a tag and release
#   - upload assets to the release
#   - upload assets to pypi

name: Build

on: [push, pull_request, workflow_dispatch, repository_dispatch]

jobs:
  build_and_test:
    runs-on: [self-hosted, windows, x64, backup]
    strategy:
      matrix:
        python-version: [27, 38]
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set python path
      id: path
      run: echo "::set-output name=pythonv::c:/python${{matrix.python-version}}/python"

    - name: Install dependencies
      run: |
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade pip
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade jsonpath-ng
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade pyyaml
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade pytest
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade setuptools
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade wheel
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade twine
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade requests

    - name: install latest version of abstract-open-traffic-generator
      if: github.event_name == 'repository_dispatch'
      id: install_latest
      run: |
        ${{steps.path.outputs.pythonv}} -m pip install --user --upgrade abstract-open-traffic-generator

    - name: install sanity version of abstract-open-traffic-generator
      if: steps.install_latest.conclusion == 'skipped'
      run: |
        ${{steps.path.outputs.pythonv}} setup.py install

    - name: Build distributions
      run: |
        ${{steps.path.outputs.pythonv}} setup.py sdist --formats=gztar bdist_wheel --universal

    - name: Get VERSION number
      id: get_version
      run: echo "::set-output name=version::$(cat VERSION)"
    
    - name: Test whl distribution installation
      run: |
        ${{steps.path.outputs.pythonv}} -m pip install dist/ixnetwork_open_traffic_generator-${{ steps.get_version.outputs.version }}-py2.py3-none-any.whl

    - name: Run tests
      run: |
        ${{steps.path.outputs.pythonv}} -m pytest --api_server=127.0.0.1 --api_server_port=11009 --tx_port_location='10.36.77.103;01;01' --rx_port_location='10.36.77.103;01;02' -s -v tests --disable-warnings

  create_release_and_deploy:
    needs: build_and_test
    runs-on: [self-hosted, windows, x64, backup]
    if: github.event_name == 'push'
    steps:
    - name: Get all changes
      id: file_changes
      uses: jitterbit/get-changed-files@v1
      with:
          format: 'json'

    - name: Output changed files
      id: changed_files
      run: echo ${{steps.file_changes.outputs.modified}}

    - name: Create Release
      if: true == contains(steps.file_changes.outputs.modified, 'VERSION')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: v${{ needs.build_and_test.outputs.version }}
        release_name: Release ${{ needs.build_and_test.outputs.version  }}
        draft: false
        prerelease: false

    - name: Upload Assets To Release
      if: true == contains(steps.file_changes.outputs.modified, 'VERSION')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*
        tag: v${{ needs.build_and_test.outputs.version }}
        overwrite: true
        file_glob: true   
        
    - name: Upload Assets to Pypi
      if: true == contains(steps.file_changes.outputs.modified, 'VERSION')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        c:/python38/Scripts/twine upload dist/ixnetwork_open_traffic_generator-${{ needs.build_and_test.outputs.version  }}-py2.py3-none-any.whl
        c:/python38/Scripts/twine upload dist/ixnetwork_open_traffic_generator-${{ needs.build_and_test.outputs.version  }}.tar.gz
